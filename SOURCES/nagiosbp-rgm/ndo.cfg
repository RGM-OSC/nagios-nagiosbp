# Nagios Business Process AddOns get actual data from Nagios via the NDO interface
# Nagios can write the NDO data into a database (ndo2db) or into the filesystem
# (ndo2fs)
# this file configures, where to take this information from
# in releases up to 0.9.2 this file was called ndo_db_readonly.cfg
# (because up to this point, the database was the only supported interface)

# tells if NDO data is to be taken from a database (db/merlin) or from the filesystem (fs)
# allowed values are db, merlin or fs 
# ndo=db
# ndo=merlin
# ndo=fs
ndo=mk_livestatus

#
# settings if You use ndo=fs
#

# ndofs_basedir is the directory where ndo2fs stores status information
# (this directory has the two subdirectories PERSISTENT and VOLATILE)
ndofs_basedir=/srv/eyesofnetwork/ndo2fs/var

# the instance name of ndo2fs
# (this is the name of the subdirectory in <ndofs_basedir>/PERSISTENT You want to use)
ndofs_instance_name=default

#
# settings if You use ndo=mk_livestatus
#

# ndo_livestatus_socket gives the full path of mk_livestatus' unix socket
ndo_livestatus_socket=/srv/eyesofnetwork/nagios/var/log/rw/live

#
# settings if You use ndo=db or ndo=merlin
#

# The hostname or IP and the port of the server running Your NDO or Merlin database
ndodb_host=localhost
ndodb_port=3306

# Name of Your NDO or Merlin database (instance name)
ndodb_database=ndoutils

# Username and password to connect to the database
ndodb_username=root
ndodb_password=root66

# Prefix
# all tablenames of Your NDO or Merlin database start with the same prefix
# enter this prefix here (default for NDO: nagios_, for Merlin: NULL)
# e. g. look for a table calles
# <something>objects
# enter <something> here
#ndodb_prefix=ndo_
ndodb_prefix=nagios_

#
# common settings
# (valid for all backends)
#

# Cache
# starting with version 0.9.4 You can configure to cache states we just got from
# the database or filesystem so that the next process can use them
# especially if You have a big installation of Nagios Business Process AddOns
# and have configured the business processes to be Nagios Services, this can
# bring You much speed with much lower load on Your monitoring server
# but the results are not so fresh as they could be
# so You decide!

# for this time in seconds states are cached
cache_time=0
# where to store cached states
cache_file=/srv/eyesofnetwork/nagiosbp/var/ndo_backend_cache
